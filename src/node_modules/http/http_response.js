// Copyright Titanium I.T. LLC.
"use strict";

const ensure = require("util/ensure");

module.exports = class HttpResponse {

	static create({ status, headers = {}, body, debug }) {
		ensure.signature(arguments, [{
			status: Number,
			headers: [ undefined, Object ],
			body: String,
			debug: [ undefined, String ],
		}]);
		return new HttpResponse(status, headers, body, debug);
	}

	static createJsonResponse({ status, headers = {}, body, debug }) {
		ensure.signature(arguments, [{
			status: Number,
			headers: [ undefined, Object ],
			body: Object,
			debug: [ undefined, String ],
		}]);

		headers = {
			"content-type": "application/json",
			...headers,
		};
		return new HttpResponse(status, headers, JSON.stringify(body), debug);
	}

	constructor(status, headers, body, debug) {
		this._status = status;
		this._headers = { ...headers };
		this._body = body;

		// We provide this field so it can be viewed in failing tests. It's not used in any way.
		if (debug !== undefined) this._debug = debug;
	}

	get status() {
		return this._status;
	}

	get headers() {
		return this._headers;
	}

	get body() {
		return this._body;
	}

};