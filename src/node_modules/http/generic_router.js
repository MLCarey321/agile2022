// Copyright Titanium I.T. LLC.
"use strict";

const ensure = require("util/ensure");
const HttpRequest = require("./http_request");

module.exports = class GenericRouter {

	static create(errorFnAsync, routes) {
		ensure.signature(arguments, [ Function, Object ]);
		return new GenericRouter(errorFnAsync, routes);
	}

	constructor(errorFnAsync, routes) {
		this._errorFnAsync = errorFnAsync;
		this._routes = routes;
	}

	async routeAsync(request, config) {
		ensure.signature(arguments, [ HttpRequest, [ undefined, Object ]]);

		const route = this._routes[request.urlPathname];
		if (route === undefined) return await this._errorFnAsync(404, "not found", request);

		const functionName = `${request.method.toLowerCase()}Async`;
		const methodFnAsync = route[functionName];
		if (methodFnAsync === undefined) return await this._errorFnAsync(405, "method not allowed", request);

		return await methodFnAsync.call(route, request, config);
	}

};