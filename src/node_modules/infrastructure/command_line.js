// Copyright Titanium I.T. LLC.
"use strict";

const ensure = require("util/ensure");
const EventEmitter = require("events");
const infrastructureHelper = require("util/infrastructure_helper");

const STDOUT_EVENT = "stdout";

/** Wrapper for command-line processing */
module.exports = class CommandLine {

	static create() {
		// return new CommandLine();
		return new CommandLine(process);
	}

	static createNull({ args = []} = {}) {
		return new CommandLine(new NullProcess(args));
	}

	constructor(proc) {
		this._process = proc;
		this._emitter = new EventEmitter();
	}

	args() {
		ensure.signature(arguments, []);

		// your production code here
		return this._process.argv.slice(2);
	}

	trackStdout() {
		return infrastructureHelper.trackOutput(this._emitter, STDOUT_EVENT);
	}

	writeStdout(text) {
		ensure.signature(arguments, [ String ]);

		// your production code here
		this._emitter.emit(STDOUT_EVENT, text);
		this._process.stdout.write(text);
	}

	writeStderr(text) {
		ensure.signature(arguments, [ String ]);

		// your production code here
		process.stderr.write(text);
	}

};

class NullProcess {

	constructor(args) {
		this._args = args;
	}

	get stdout() {
		return {
			write() {}
		};
	}

	get argv() {
		return [ "null_process_node", "null_process_script.js", ...this._args ];
	}
}